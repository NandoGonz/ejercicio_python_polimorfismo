# Nombre del Workflow: se mostrar치 en la pesta침a "Actions" de GitHub
# Nombre del Workflow
name: 02 - Student PR Quality Check

# 1. Evento (Trigger): Cu치ndo se debe ejecutar este workflow
on:
  pull_request:
    branches: [ main, master ] # Se ejecuta en PRs dirigidos a la rama main o master

# 2. Jobs: Lista de trabajos a ejecutar
jobs:
  # Nombre del trabajo (puedes llamarlo como quieras)
  test-and-lint:
    # 3. Runner: La m치quina virtual donde se ejecutar치 el trabajo
    runs-on: ubuntu-latest

    # 4. Steps: Los pasos que se ejecutar치n secuencialmente
    steps:
      # Paso 1: Descargar el c칩digo del repositorio (del PR)
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Configurar el entorno de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # Puedes especificar la versi칩n que usas

      # Paso 3: Instalar dependencias (incluyendo pytest para pruebas)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt
          pip install pytest flake8  # Instalar herramientas de calidad

      # Paso 4: Ejecutar Linting (revisa el estilo del c칩digo)
      # Flake8 buscar치 errores de estilo y errores simples.
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # Paso 5: Ejecutar Pruebas con Pytest
      # El `id` permite que otros pasos se refieran a este. `continue-on-error` evita que el workflow se detenga si las pruebas fallan.
      - name: Run tests with pytest
        id: tests
        continue-on-error: true
        run: |
          pytest

      # Paso 6: Comentar en el PR si las pruebas fallaron
      # Este paso solo se ejecuta si el paso con id 'tests' fall칩 (conclusion == 'failure')
      - name: Comment on PR if tests fail
        if: steps.tests.conclusion == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            const issue_number = context.issue.number;
            const comment = `
              ## 游뚿 춰Pruebas Fallidas! 游뚿

              Hola @${{ github.actor }}, parece que algunas de las pruebas autom치ticas han fallado.

              Por favor, revisa los logs del paso **"Run tests with pytest"** m치s arriba para ver los detalles del error y corregir tu soluci칩n.

              춰Sigue intent치ndolo! 游눩
            `;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: comment
            });
            core.setFailed('Las pruebas han fallado.');
